@{
    ViewData["Title"] = "CheckDuplicatedRecord";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <!--begin::Card body-->
    <div class="card-body">

        <div class="card-px text-center pt-15 pb-15">
            <!--begin::Title-->
            <h2 class="fs-2x fw-bolder mb-">Mükkerrer Kayıt Sorgula</h2>
            <form id="kt_docs_formvalidation_text" class="form" action="#" autocomplete="off">
                <div class="fv-row mb-10">

                    <select class="form-select" data-control="select2" name="SurveyId" asp-items="@ViewBag.SurveyList">
                    </select>
                </div>
                <button id="kt_docs_formvalidation_text_submit" type="submit" class="btn btn-primary">
                    <span class="indicator-label">
                        Sorgula
                    </span>
                    <span class="indicator-progress">
                        Lütfen Bekleyin... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                </button>
            </form>
        </div>
        <div class="text-center pb-15 px-5">
            <img src="~/assets/media/illustrations/unitedpalms-1/3.png" alt="" class="mw-100 h-200px h-sm-325px">
        </div>
    </div>
</div>

@section js{
    <script>
        const form = document.getElementById('kt_docs_formvalidation_text');
        var validator = FormValidation.formValidation(
            form,
            {
                fields: {
                    'SurveyId': {
                        validators: {
                            notEmpty: {
                                message: 'Lütfen bir proje seçiniz!'
                            }
                        }
                    },
                },

                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap5({
                        rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                }
            }
        );

        // Submit button handler
        const submitButton = document.getElementById('kt_docs_formvalidation_text_submit');
        submitButton.addEventListener('click', function (e) {
            e.preventDefault();
            if (validator) {
                validator.validate().then(function (status) {
                    console.log('validated!');
                    if (status == 'Valid') {
                        submitButton.setAttribute('data-kt-indicator', 'on');
                        submitButton.disabled = true;
                        setTimeout(function () {
                            $.ajax({
                                url: 'check-duplicated-record',
                                type: 'POST',
                                processData: false,
                                contentType: false,
                                cache: false,
                                data: new FormData(document.getElementById("kt_docs_formvalidation_text")),
                                success: function (data) {
                                    console.log(data)
                                    submitButton.removeAttribute('data-kt-indicator');
                                    submitButton.disabled = false;

                                    if (data.count > 0) {
                                        Swal.fire({
                                            text: data.count + " adet " + data.message,
                                            icon: "warning",
                                            buttonsStyling: false,
                                            confirmButtonText: "Tamam",
                                            customClass: {
                                                confirmButton: "btn btn-warning"
                                            }
                                        });
                                    } else {
                                        Swal.fire({
                                            text:  data.message,
                                            icon: "success",
                                            buttonsStyling: false,
                                            confirmButtonText: "Tamam",
                                            customClass: {
                                                confirmButton: "btn btn-success"
                                            }
                                        });
                                    }
                                },
                                error: function (data) {
                                    toastr.error(data.message, "Başarısız");

                                }
                            });

                        }, 2000);
                    }
                });
            }
        });
    </script>
}
